% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reprex.R
\name{reprex}
\alias{reprex}
\title{Render a reprex}
\usage{
reprex(x = NULL, venue = c("gh", "so"), si = FALSE, show = TRUE,
  infile = NULL, outfile = NULL, opts_chunk = NULL, opts_knit = NULL)
}
\arguments{
\item{x}{An expression. If not given, \code{reprex} will look for code in
\code{infile}, if provided, or on the clipboard.}

\item{venue}{"gh" for GitHub (default) or "so" for stackoverflow.}

\item{si}{Whether to include the results of
\code{\link[devtools]{session_info}}, if available, or
\code{\link{sessionInfo}} at the end of the reprex. When \code{venue =
"gh"} (the default), session info is wrapped in a collapsible details tag.}

\item{show}{Whether to show rendered output in a viewer (RStudio or browser).}

\item{infile}{Path to \code{.R} file containing reprex code.}

\item{outfile}{Desired stub for output \code{.R}, \code{.md}, and
\code{.html} files for reproducible example. If \code{NULL}, keeps them in
temporary files. At this point, outfiles are deposited in current working
directory, but the goal is to consult options for a place to store all
reprexes.}

\item{opts_chunk, opts_knit}{Named list. Optional
\href{http://yihui.name/knitr/options/}{knitr chunk and package options},
respectively, to supplement or override reprex defaults. See Details.}
}
\description{
Given some R code on the clipboard, in an expression, or in a file, this
function runs it via \code{\link[rmarkdown]{render}}. The resulting bit of
Markdown is the primary output. It will be ready and waiting on the
clipboard, for pasting into a GitHub issue or to stackoverflow. Optionally,
the R code and Markdown will be left behind in files. An HTML preview will
display in RStudio's Viewer pane, if available, or in the default browser
otherwise.
}
\details{
reprex sets specific \href{http://yihui.name/knitr/options/}{knitr
options}, which you can supplement or override via the \code{opts_chunk} and
\code{opts_knit} arguments.

\itemize{
\item Chunk options: \code{collapse = TRUE}, \code{comment = '#>'},
\code{error = TRUE}. Chunk options are typically set via
\code{knitr::opts_chunk$set()}.
\item Package options: \code{upload.fun = knitr::imgur_upload}. Package
options are typically set via \code{knitr::opts_knit$set()}. The
\code{upload.fun} defaults to \code{\link[knitr]{imgur_upload}} so figures
produced by the reprex appear properly on GitHub.
}
}
\examples{
\dontrun{
# put some code like this on the clipboard
# (y <- 1:4)
# mean(y)
reprex()

# or provide it as code in brackets:
reprex({y <- 1:4; mean(y)})

# note that you can include newlines in those brackets
# in fact, that is probably a good idea
reprex({
  x <- 1:4
  y <- 2:5
  x + y
})

# overriding a default chunk option
 reprex({y <- 1:4; mean(y)}, opts_chunk = list(comment = "#;-)"))
}

}

